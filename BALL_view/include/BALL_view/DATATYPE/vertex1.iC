// -*- Mode: C++; tab-width: 2; -*-
// vi: set ts=2:
//
// $Id: vertex1.iC,v 1.2 2003/11/24 23:49:14 amoll Exp $

BALL_INLINE
void Vertex::setVertex(const Vector3& v)
{
  *vertex1_ptr_ = v;
}

BALL_INLINE
void Vertex::setVertex
  (const float x, const float y, const float z)
{
  vertex1_ptr_->set(x, y, z);
}

BALL_INLINE
Vector3& Vertex::getVertex()
{
  return *vertex1_ptr_;
}

BALL_INLINE
const Vector3& Vertex::getVertex() const
{
  return *vertex1_ptr_;
}

BALL_INLINE
void Vertex::getVertex(Vector3& v) const
{
  v = *vertex1_ptr_;
}

BALL_INLINE
void Vertex::getVertex(float &x, float &y, float &z) const
{
  vertex1_ptr_->get(x, y, z);
}

BALL_INLINE
void Vertex::setVertexAddress(const Vector3& v)
{
  vertex1_ptr_ = (Vector3 *)&v;
}

BALL_INLINE
void Vertex::setDefaultVertexAddress()
{
  vertex1_ptr_ = (Vector3 *)&vertex1_;
}

BALL_INLINE
Vector3* Vertex::getVertexAddress() const
{
  return vertex1_ptr_;
}

BALL_INLINE
bool Vertex::isDefaultVertexAddress() const
{
  return (vertex1_ptr_ == (Vector3 *)&vertex1_);
}
